{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","cardArrays","robots","map","robot","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAA1B,cACvB,gCACI,6BAAKF,IACL,4BAAIC,WCWLK,EAjBE,SAAC,GAAgB,IAC1BC,EADyB,EAAbC,OACQC,KAAI,SAACC,EAAOC,GAClC,OAAO,cAAC,EAAD,CAEKT,GAAIQ,EAAMR,GACVF,KAAMU,EAAMV,KACZC,MAAOS,EAAMT,OAHRU,MAOrB,OACE,8BACIJ,KCDOK,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aACjC,OACG,qBAAKX,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVY,KAAK,SACLC,YAAY,uBACZC,SAAUH,OCKPI,EAZA,SAACC,GACZ,OACI,qBAAKC,MAAO,CACRC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAHZ,SAKKJ,EAAMK,YCgBJC,G,wDApBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,8DAOAC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAGG,KAAKJ,MAAMC,SACH,0DAGJG,KAAKX,MAAMK,a,GAjBCQ,cCuDZC,E,kDAjDX,aAAe,IAAD,8BACV,gBAcJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACTlB,OAAQ,GACRK,YAAa,IALP,E,gEASM,IAAD,OACfyB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEvB,OAAQkC,S,+BAOjC,IAAD,EAC2BZ,KAAKJ,MAA7BlB,EADH,EACGA,OAAQK,EADX,EACWA,YAEV8B,EAAiBnC,EAAOoC,QAAO,SAAAlC,GACjC,OAAOA,EAAMV,KAAK6C,cAAcC,SAASjC,EAAYgC,kBAGzD,OAAQrC,EAAOuC,OAKH,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CACIW,aAAegB,KAAKI,eACpBrB,YAAcA,IAElB,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CACIL,OAASmC,WAZ7B,oBAAIxC,UAAU,KAAd,4B,GA7BE6B,aCKHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.552b3747.chunk.js","sourcesContent":["// import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n    return(\n        <div className='bg-light-green dib br3 pa3 ma3 grow bw2 shadow-5'>\n            <img alt=\"testfoto\" src={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import Card from './Card';\n\nconst CardList = ({ robots }) => {\n  const cardArrays = robots.map((robot, i) => {\n      return <Card \n                  key={i}\n                  id={robot.id}\n                  name={robot.name}\n                  email={robot.email}\n              />\n  });\n\n  return(\n    <div>\n      { cardArrays }\n      </div>  \n  );\n}\n\nexport default CardList;","const SearchBox = ({ searchField, searchChange }) => {\n return (\n    <div className=\"pa2\">\n        <input\n            className=\"pa3 ba b--green bg-lightest-blue\"\n            type=\"search\"\n            placeholder=\"Search Robots here..\"\n            onChange={searchChange}>\n        </input>\n    </div>\n );\n}\n\nexport default SearchBox;","const Scroll = (props) => {\n    return (\n        <div style={{\n            overflowY: 'scroll',\n            border: '3px solid black',\n            height: '800px'\n        }}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true });\n    }\n\n    render() {\n        if(this.state.hasError) {\n            return <h1>Opppps. That is not good</h1>\n        }\n        \n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;","import CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport { Component } from 'react';\nimport './App.css';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nclass App extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            robots: [],\n            searchField: ''\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({ robots: users }));\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchField: event.target.value });\n    }\n\n    render() {\n        const { robots, searchField } = this.state;\n\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\n        });\n        \n        return !robots.length\n            ?\n                <h1 className='tc'>Loading...</h1> \n            :\n                (\n                    <div className=\"tc\">\n                        <h1 className='f1'>Robotfriends</h1>\n                        <SearchBox\n                            searchChange={ this.onSearchChange }\n                            searchField={ searchField }\n                        />\n                        <Scroll>\n                            <ErrorBoundry>\n                                <CardList \n                                    robots={ filteredRobots }\n                                />\n                            </ErrorBoundry>\n                        </Scroll>\n                    </div>\n                );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}